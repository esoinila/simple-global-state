{"version":3,"sources":["GlobalStateProvider.tsx","PageContainer.tsx","PageOne.tsx","PageTwo.tsx","App.tsx","index.tsx"],"names":["GlobalStateContext","createContext","state","setState","GlobalStateProvider","children","value","useState","Provider","useGlobalState","context","useContext","Error","Debug","JSON","stringify","PageContainer","style","height","display","textAlign","margin","PageOne","history","useHistory","useForm","handleSubmit","register","onSubmit","data","prev","push","Box","mb","TextField","autoComplete","name","label","variant","type","inputRef","InputLabelProps","htmlFor","inputProps","id","Button","color","PageTwo","firstname","age","lastname","App","exact","path","ReactDOM","render","basename","document","getElementById"],"mappings":"uNAcMA,EAAqBC,wBAAc,CACvCC,MAAO,GACPC,SAAU,KAQNC,EAAsB,SAAC,GAGQ,IAFnCC,EAEkC,EAFlCA,SAEkC,IADlCC,aACkC,MAD1B,GAC0B,IACRC,mBAASD,GADD,mBAC3BJ,EAD2B,KACpBC,EADoB,KAElC,OACE,cAACH,EAAmBQ,SAApB,CAA6BF,MAAO,CAAEJ,QAAOC,YAA7C,SACGE,KAKDI,EAAiB,WACrB,IAAMC,EAAUC,qBAAWX,GAC3B,IAAKU,EACH,MAAM,IAAIE,MAAM,2DAElB,OAAOF,GAGHG,EAAQ,WAAO,IACXX,EAAUO,IAAVP,MACR,OAAO,8BAAMY,KAAKC,UAAUb,GAAS,GAAI,KAAM,S,gBC5CpCc,EAAgB,SAAC,GAAD,IAAGX,EAAH,EAAGA,SAAH,OAC3B,qBAAKY,MAAO,CAAEC,OAAQ,OAAQC,QAAS,OAAQC,UAAW,UAA1D,SACE,qBAAKH,MAAO,CAAEI,OAAQ,QAAtB,SACE,mCAAGhB,S,2BC+DMiB,EA5DC,WACd,IAAMC,EAAUC,cADI,EAEeC,cAA3BC,EAFY,EAEZA,aAAcC,EAFF,EAEEA,SACdxB,EAAaM,IAAbN,SAOR,OACE,eAAC,EAAD,WACE,0CACA,8DAEA,uBAAMyB,SAAUF,GAVG,SAACG,GACtB1B,GAAS,SAAC2B,GAAD,mBAAC,eAAeA,GAASD,MAClCN,EAAQQ,KAAK,WAQX,UACE,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAACC,EAAA,EAAD,CACEC,aAAa,YACbC,KAAK,YACLC,MAAM,aACNC,QAAQ,WACRC,KAAK,OACLC,SAAUb,EACVc,gBAAiB,CAAEC,QAAS,aAC5BC,WAAY,CAAEC,GAAI,iBAGtB,cAACZ,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAACC,EAAA,EAAD,CACEC,aAAa,WACbC,KAAK,WACLC,MAAM,WACNC,QAAQ,WACRC,KAAK,OACLC,SAAUb,EACVc,gBAAiB,CAAEC,QAAS,YAC5BC,WAAY,CAAEC,GAAI,gBAGtB,cAACZ,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAACC,EAAA,EAAD,CACEC,aAAa,MACbC,KAAK,MACLC,MAAM,MACNC,QAAQ,WACRC,KAAK,SACLC,SAAUb,EACVc,gBAAiB,CAAEC,QAAS,OAC5BC,WAAY,CAAEC,GAAI,WAGtB,cAACC,EAAA,EAAD,CAAQP,QAAQ,YAAYQ,MAAM,UAAUP,KAAK,SAAjD,mDCrCOQ,EAnBC,WAAO,IACb7C,EAAUO,IAAVP,MACA8C,EAA6B9C,EAA7B8C,UAAWC,EAAkB/C,EAAlB+C,IAAKC,EAAahD,EAAbgD,SACxB,OACE,cAAC,EAAD,UACE,gCACE,qDAEA,uCACA,sCAAOF,EAAP,YAAoBE,KAEpB,sCACA,4BAAID,IACJ,kDACA,cAAC,EAAD,UCKOE,MAhBf,WACE,OACE,cAAC,IAAD,UACE,eAAC,EAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAGF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,OAAlB,SACE,cAAC,EAAD,Y,MCVVC,IAASC,OACP,cAAC,IAAD,CAAQC,SAAS,IAAjB,SACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b6c54840.chunk.js","sourcesContent":["import React, {\n  createContext,\n  useState,\n  useContext,\n  Dispatch,\n  SetStateAction,\n} from \"react\";\n\nexport interface GlobalStateInterface {\n  firstname: string;\n  lastname: string;\n  age: string;\n}\n\nconst GlobalStateContext = createContext({\n  state: {} as Partial<GlobalStateInterface>,\n  setState: {} as Dispatch<SetStateAction<Partial<GlobalStateInterface>>>,\n});\n\ninterface GlobalStateProviderInterface {\n  children: React.ReactNode;\n  value?: Partial<GlobalStateInterface>;\n}\n\nconst GlobalStateProvider = ({\n  children,\n  value = {} as GlobalStateInterface,\n}: GlobalStateProviderInterface) => {\n  const [state, setState] = useState(value);\n  return (\n    <GlobalStateContext.Provider value={{ state, setState }}>\n      {children}\n    </GlobalStateContext.Provider>\n  );\n};\n\nconst useGlobalState = () => {\n  const context = useContext(GlobalStateContext);\n  if (!context) {\n    throw new Error(\"useGlobalState must be used within a GlobalStateContext\");\n  }\n  return context;\n};\n\nconst Debug = () => {\n  const { state } = useGlobalState();\n  return <pre>{JSON.stringify(state || {}, null, \"\\t\")}</pre>;\n};\n\nexport { GlobalStateProvider, useGlobalState, Debug };\n","import React from \"react\";\n\nexport const PageContainer = ({ children }: { children: React.ReactNode }) => (\n  <div style={{ height: \"100%\", display: \"flex\", textAlign: \"center\" }}>\n    <div style={{ margin: \"auto\" }}>\n      <>{children}</>\n    </div>\n  </div>\n);\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\n\nimport { useGlobalState, GlobalStateInterface } from \"./GlobalStateProvider\";\nimport { PageContainer } from \"./PageContainer\";\nimport { Box, Button, TextField } from \"@material-ui/core\";\n\nconst PageOne = () => {\n  const history = useHistory();\n  const { handleSubmit, register } = useForm();\n  const { setState } = useGlobalState();\n\n  const submitFunction = (data: Partial<GlobalStateInterface>) => {\n    setState((prev) => ({ ...prev, ...data }));\n    history.push(\"/two\");\n  };\n\n  return (\n    <PageContainer>\n      <h1>PAGE ONE</h1>\n      <p>Enter your global state below</p>\n\n      <form onSubmit={handleSubmit(submitFunction)}>\n        <Box mb={1}>\n          <TextField\n            autoComplete=\"firstname\"\n            name=\"firstname\"\n            label=\"First name\"\n            variant=\"outlined\"\n            type=\"text\"\n            inputRef={register}\n            InputLabelProps={{ htmlFor: \"firstname\" }}\n            inputProps={{ id: \"firstname\" }}\n          />\n        </Box>\n        <Box mb={1}>\n          <TextField\n            autoComplete=\"lastname\"\n            name=\"lastname\"\n            label=\"Lastname\"\n            variant=\"outlined\"\n            type=\"text\"\n            inputRef={register}\n            InputLabelProps={{ htmlFor: \"lastname\" }}\n            inputProps={{ id: \"lastname\" }}\n          />\n        </Box>\n        <Box mb={1}>\n          <TextField\n            autoComplete=\"age\"\n            name=\"age\"\n            label=\"Age\"\n            variant=\"outlined\"\n            type=\"number\"\n            inputRef={register}\n            InputLabelProps={{ htmlFor: \"age\" }}\n            inputProps={{ id: \"age\" }}\n          />\n        </Box>\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n          View global state on next page\n        </Button>\n      </form>\n    </PageContainer>\n  );\n};\n\nexport default PageOne;\n","import React from \"react\";\nimport { Debug, useGlobalState } from \"./GlobalStateProvider\";\nimport { PageContainer } from \"./PageContainer\";\n\nconst PageTwo = () => {\n  const { state } = useGlobalState();\n  const { firstname, age, lastname } = state;\n  return (\n    <PageContainer>\n      <div>\n        <h1>State from PageOne:</h1>\n\n        <h2>Name:</h2>\n        <p>{`${firstname} ${lastname}`}</p>\n\n        <h2>Age:</h2>\n        <p>{age}</p>\n        <h2>Debug the state:</h2>\n        <Debug />\n      </div>\n    </PageContainer>\n  );\n};\nexport default PageTwo;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { GlobalStateProvider } from \"./GlobalStateProvider\";\n\nimport PageOne from \"./PageOne\";\nimport PageTwo from \"./PageTwo\";\n\nfunction App() {\n  return (\n    <Switch>\n      <GlobalStateProvider>\n        <Route exact path=\"/\">\n          <PageOne />\n        </Route>\n\n        <Route exact path=\"/two\">\n          <PageTwo />\n        </Route>\n      </GlobalStateProvider>\n    </Switch>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <Router basename=\"/\">\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}